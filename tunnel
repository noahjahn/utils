#!/bin/bash

source "$NOAHJAHN_UTILS_DIR/scripts/bash/base-image-tag.sh"
source "$NOAHJAHN_UTILS_DIR/scripts/bash/validate-binary.sh"
source "$NOAHJAHN_UTILS_DIR/scripts/bash/validate-input.sh"

id=$(_validate_binary uuidgen)
printf=$(_validate_binary printf)
docker=$(_validate_binary docker)

print_usage() {
    $printf "Usage:\ttunnel [OPTIONS]\n"
    $printf "\nCreate an SSH tunnel quickly and efficiently\n\n"
    $printf "Options:\n"
    $printf "  -u, --bastion-username string\t\tThe username of the server you have SSH access to\n"
    $printf "  -h, --bastion-host string\t\tThe host of the server you have SSH access to\n"
    $printf "  -k, --bastion-private-key string\tThe private key file path for the user of the server you have SSH access to\n"
    $printf "  -p, --local-port int\t\t\tThe port on your computer that you want to use to access the remote resource through\n"
    $printf "  -r, --remote-host string\t\tThe host of the resource that is accessible from within the network of the bastion server\n"
    $printf "  -P, --remote-port int\t\t\tThe port of the resource that is accessible from within the network of the bastion server\n\n"
}

parse_input() {
    while true; do
        case "$1" in
        -u | --bastion-username)
            destination_username="$2"
            shift 2
            ;;
        -h | --bastion-host)
            destination_host="$2"
            shift 2
            ;;
        -k | --bastion-private-key)
            destination_private_key_file="$2"
            shift 2
            ;;
        -p | --local-port)
            local_port_map="$2"
            shift 2
            ;;
        -r | --remote-host)
            remote_host="$2"
            shift 2
            ;;
        -P | --remote-port)
            remote_port="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *) break ;;
        esac
    done
}

destination_username=
destination_host=
destination_private_key_file=
local_port_map=
remote_host=
remote_port=

parse_input "$@"

_validate_input "$destination_username" print_usage
_validate_input "$destination_host" print_usage
_validate_input "$destination_private_key_file" print_usage
_validate_input "$local_port_map" print_usage
_validate_input "$remote_host" print_usage
_validate_input "$remote_port" print_usage

IMAGE_TAG="$BASE_IMAGE_TAG-tunnel"
CONTAINER_NAME="$IMAGE_TAG-$($id +%s)"

$docker build -f "$NOAHJAHN_UTILS_DIR/Dockerfile.tunnel" -t $IMAGE_TAG . || exit 1

$docker run -p $local_port_map:$local_port_map --name $CONTAINER_NAME --rm --entrypoint=tail -d $IMAGE_TAG -f /dev/null || exit 1

$docker cp $destination_private_key_file $CONTAINER_NAME:/private-key || {
    $docker stop -t 1 $CONTAINER_NAME
    exit 1
}

$docker exec -i $CONTAINER_NAME chmod 600 /private-key || {
    $docker stop -t 1 $CONTAINER_NAME
    exit 1
}

$docker exec -it $CONTAINER_NAME ssh -o StrictHostKeyChecking=no -g -N -i /private-key -L 0.0.0.0:$local_port_map:$remote_host:$remote_port $destination_username@$destination_host || { $docker stop -t 1 $CONTAINER_NAME; }
