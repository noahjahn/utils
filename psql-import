#!/bin/sh

source "$NOAHJAHN_UTILS_DIR/scripts/bash/base-image-tag.sh"
source "$NOAHJAHN_UTILS_DIR/scripts/bash/validate-binary.sh"
source "$NOAHJAHN_UTILS_DIR/scripts/bash/validate-input.sh"

id=$(_validate_binary uuidgen)
docker=$(_validate_binary docker)
printf=$(_validate_binary printf)

print_usage() {
    $printf "Usage:\tpsql-import [OPTIONS]\n"
    $printf "\nImport a dump of a PostgreSQL database quickly and efficiently\n\n"
    $printf "Options:\n"
    $printf "  -h, --host string\t\tThe host of the database server you want to import to\n"
    $printf "  -p, --port int\t\tThe port of the database server you want to import to, defaults to 5432\n"
    $printf "  -u, --username string\t\tThe username of the database server that has access to the database that you want to import to\n"
    $printf "  -d, --database string\t\tThe database name on the database server that you want to import to\n"
    $printf "  -f, --file string\t\tThe file path to the back-up file that you want to import into the database\n"
    $printf "  -v, --version string\t\tThe PostgreSQL database version that you want to use for the pg_restore client, corresponds to the postgres docker image tag, defaults to latest\n"
}

parse_input() {
    while true; do
        case "$1" in
        -h | --host)
            host="$2"
            shift 2
            ;;
        -p | --port)
            port="$2"
            shift 2
            ;;
        -u | --username)
            username="$2"
            shift 2
            ;;
        -d | --database)
            database="$2"
            shift 2
            ;;
        -f | --file)
            file="$2"
            shift 2
            ;;
        -v | --version)
            version="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *) break ;;
        esac
    done
}

host=
port='5432'
username=
database=
file=
version='latest'

parse_input "$@"

_validate_input "$host" print_usage
_validate_input "$username" print_usage
_validate_input "$database" print_usage

IMAGE_TAG="$BASE_IMAGE_TAG-psql-import"
CONTAINER_NAME="$IMAGE_TAG-$($id +%s)"

$docker run --name $CONTAINER_NAME --rm --entrypoint=tail -d postgres:$version -f /dev/null

$docker cp $file $CONTAINER_NAME:/$database.sql

$docker exec -it $CONTAINER_NAME pg_restore \
    --dbname $database \
    --host $host \
    --port $port \
    --user $username \
    --section=pre-data \
    --section=data \
    --section=post-data \
    --no-owner \
    --no-privileges \
    --no-tablespaces \
    --no-comments \
    --no-publications \
    --no-subscriptions \
    --no-security-labels \
    --no-table-access-method \
    --clean \
    --verbose \
    -W \
    "/$database.sql"

$docker stop -t 1 $CONTAINER_NAME
